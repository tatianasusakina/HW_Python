# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.

# 5 -> 1 0 1 1 0
# 2


# def min_number_of_coins(n):
#     count_1 = 0
#     count_0 = 0
#     for i in range(n):
#         coin = int(input('Орел или решка (1 или 0): '))
#         if coin == 1:
#             count_1 += 1
#         else:
#             count_0 += 1
#     return f'{min(count_1, count_0)} монетки нужно перевернуть'


# n = int(input("Введите количество монеток: "))
# print(min_number_of_coins(n))


# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y(X, Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.

# 4 4 -> 2 2
# 5 6 -> 2 3


# def find_numbers(summ, product):
#     for i in range(1000):
#         if i * (summ - i) == product:
#             return f'Загаданные числа {i} и {summ - i}'
#     return 'Чисел, дающие такие значения, нету!'


# s = int(input('Введите сумму чисел: '))
# p = int(input('Введите произведение чисел: '))
# print(find_numbers(s, p))


# Задача 14: Требуется вывести все целые степени двойки(т.е. числа вида 2k), не превосходящие числа N.

# 10 -> 1 2 4 8

# from math import log


# def get_all_power_of_two(n):
#     for i in range(int(log(n, 2))+1):
#         print(2**i, end=' ')
#     print()


# num = int(input('Введите число: '))
# get_all_power_of_two(num)