# Задача 2: Найдите сумму цифр трехзначного числа.
# *Пример:*
# 123 -> 6 (1 + 2 + 3)
# 100 -> 1 (1 + 0 + 0) |


# print(
#     f'Сумма цифр введенного числа: {sum(map(int, input("Введите число: ")))}')


# Задача 4: Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали S журавликов. Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали одинаковое количество журавликов, а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# *Пример:*
# 6 -> 1  4  1
# 24 -> 4  16  4
#     60 -> 10  40  10

# def make_crane(s):
#     if s % 6 == 0:
#         print(f'Петя сделал {s//6}')
#         print(f'Сережа сделал {s//6}')
#         print(f'Катя сделала {4*s//6} журавликов')
#     else:
#         print('Дети еще не доделали журавлики')


# s = int(input('Введите количество журавликов: '))
# make_crane(s)


# Задача 6: Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером. Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех. Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать программу, которая проверяет счастливость билета.
# *Пример:*

# 385916 -> yes
# 123456 -> no

# def happy_ticket(number):
#     return len(number) == 6 and sum(map(int, number[:len(number)//2])) == sum(map(int, number[len(number)//2:]))


# ticket = input('Введите номер билета: ')
# print(['NO', 'YES'][happy_ticket(ticket)])


# Задача 8: Требуется определить, можно ли от шоколадки размером n × m долек отломить k долек, если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку на два прямоугольника).
# *Пример:*

# 3 2 4 -> yes
# 3 2 1 -> no


# def its_possible(m, n, k):
#     if k < n*m and (not k % n or not k % m):
#         return 'YES'
#     return 'NO'


# m = int(input('Введите ширину шоколада: '))
# n = int(input('Введите длину шоколада: '))
# k = int(input('Сколько нужно отломить?: '))

# print(its_possible(m, n, k))