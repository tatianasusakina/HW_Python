# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X
# *Пример:*

# 5
#     1 2 3 4 5
#     3
#     -> 1


# n = int(input('Введите размерность списка: '))
# lst = [int(input(f'Введите элемент {i+1}: ')) for i in range(n)]
# x = int(input('Введите число X: '))
# print(f'{lst.count(x)} раз встречается число {x} в списке {lst}')


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X
# *Пример:*

# 5
#     1 2 3 4 5
#     6
#     -> 5


# n = int(input('Введите размерность списка: '))
# lst = [int(input(f'Введите элемент {i+1}: ')) for i in range(n)]
# x = int(input('Введите число X: '))
# print(f'Ближайший элемент {min(lst, key=lambda num: abs(num-x))}')


# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков. Напишите программу, которая вычисляет стоимость введенного пользователем слова. Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.
# *Пример:*

# ноутбук
#     12


import string

chr_1 = "AEIOULNSTR"
chr_2 = "DG"
chr_3 = "BCMP"
chr_4 = "FHVWY"
chr_5 = "K"
chr_8 = "JX"
chr_10 = "QZ"

sym_1 = "АВЕИНОРСТ"
sym_2 = "ДКЛМПУ"
sym_3 = "БГЁЬЯ"
sym_4 = "ИЫ"
sym_5 = "ЖЗХЦЧ"
sym_8 = "ШЭЮ"
sym_10 = "ФЩЪ"

en_dct = {**dict.fromkeys(chr_1, 1), **dict.fromkeys(chr_2, 2), **dict.fromkeys(chr_3, 3), **dict.fromkeys(
    chr_4, 4), **dict.fromkeys(chr_5, 5), **dict.fromkeys(chr_8, 8), **dict.fromkeys(chr_10, 10)}

ru_dct = dict.fromkeys(sym_1, 1) | dict.fromkeys(sym_2, 2) | dict.fromkeys(sym_3, 3) | dict.fromkeys(
    sym_4, 4) | dict.fromkeys(sym_5, 5) | dict.fromkeys(sym_8, 8) | dict.fromkeys(sym_10, 10)

example = string.ascii_uppercase
print('Стоимость слова: ', sum(en_dct[c] if c in example else ru_dct.get(c, 0)
                               for c in input("Введите слово: ").upper()))